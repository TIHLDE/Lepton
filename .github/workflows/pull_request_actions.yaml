name: Test and linting

on:
  pull_request:
    branches:
      - dev
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{secrets.DATABASE_ROOT_PASSWORD}}
        ports:
          - 3306
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install dependencies with pipenv
        run: |
          pip install pipenv
          pipenv install -d

      - name: Run test suite
        run: pipenv run pytest . --cov
        env:
          DJANGO_SECRET: ${{secrets.DJANGO_SECRET}}
          DATABASE_USER: ${{secrets.DATABASE_USER}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_HOST: ${{secrets.DATABASE_HOST}}
          DATABASE_PORT: ${{ job.services.mysql.ports['3306'] }}

  linting:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: flake8 app

  format:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install black & isort
        run: |
          python -m pip install --upgrade pip
          pip install black==19.10b0 isort

      - name: Formatting with black
        run: pipenv run black app/ --exclude migrations

      - name: Formatting with isort
        run: pipenv run isort .

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)

      - name: Push changes
        if: steps.git-check.outputs.modified == 'true' && github.ref != 'refs/heads/dev' # Do not run in dev
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated formatting changes
          commit_options: '--no-verify' # Do not run pre-commit hooks
