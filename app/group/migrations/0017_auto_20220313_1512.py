# Generated by Django 3.2.12 on 2022-03-13 14:12
from enum import Enum

from django.db import migrations


def update_enum_fields(apps, schema_editor):
    try:
        # Ignore this migration in case the enums are removed or their names are changed

        from app.common.enums import GroupTypeV2
    except ImportError:
        return

    Group = apps.get_model('group', 'Group')

    fields = {
        'type': GroupTypeV2
    }

    to_update = []

    for custom_model_instance in Group.objects.all():
        for old_field_name, new_enum_class in fields.items():
            new_field_name = f'new_{old_field_name}'

            field_value = getattr(custom_model_instance, old_field_name)

            # Extra check in case the value may be none or some blank value
            if isinstance(field_value, Enum):

                # Extract the value from the new enum class based on the old enum option name
                field_value = getattr(
                    new_enum_class,
                    field_value.name
                )

            setattr(custom_model_instance, new_field_name, field_value)

        to_update.append(custom_model_instance)

    Group.objects.bulk_update(
        to_update,
        [f'new_{old_field_name}' for old_field_name in fields.keys()]
    )


class Migration(migrations.Migration):

    dependencies = [
        ('group', '0016_group_new_type'),
    ]

    operations = [
        migrations.RunPython(update_enum_fields)
    ]
