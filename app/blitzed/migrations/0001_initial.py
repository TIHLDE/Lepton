# Generated by Django 4.2.5 on 2024-02-19 17:53

import app.blitzed.enums
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import enumchoicefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnonymousUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=60)),
            ],
            options={
                "verbose_name_plural": "Anonymous users",
            },
        ),
        migrations.CreateModel(
            name="BeerpongTournament",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    enumchoicefield.fields.EnumChoiceField(
                        default=app.blitzed.enums.TournamentStatus(1),
                        enum_class=app.blitzed.enums.TournamentStatus,
                        max_length=8,
                    ),
                ),
                (
                    "access",
                    enumchoicefield.fields.EnumChoiceField(
                        default=app.blitzed.enums.TournamentAccess(2),
                        enum_class=app.blitzed.enums.TournamentAccess,
                        max_length=9,
                    ),
                ),
                ("pin_code", models.CharField(max_length=4)),
                ("name", models.CharField(max_length=60)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Pong tournaments",
            },
        ),
        migrations.CreateModel(
            name="PongMatch",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "future_match",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="blitzed.pongmatch",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Matches",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text", models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(
                        blank=True, related_name="sessions", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserWastedLevel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "blood_alcohol_level",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="blitzed.session",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PongTeam",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("team_name", models.CharField(max_length=60)),
                (
                    "anonymous_members",
                    models.ManyToManyField(
                        blank=True,
                        related_name="pong_teams",
                        to="blitzed.anonymoususer",
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        blank=True,
                        related_name="pong_teams",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="blitzed.beerpongtournament",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pong team",
                "verbose_name_plural": "Pong teams",
            },
        ),
        migrations.CreateModel(
            name="PongResult",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("result", models.CharField(default="0 - 0", max_length=10)),
                (
                    "match",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result",
                        to="blitzed.pongmatch",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="match_winners",
                        to="blitzed.pongteam",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Match results",
            },
        ),
        migrations.AddField(
            model_name="pongmatch",
            name="team1",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="matches_team1",
                to="blitzed.pongteam",
            ),
        ),
        migrations.AddField(
            model_name="pongmatch",
            name="team2",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="matches_team2",
                to="blitzed.pongteam",
            ),
        ),
        migrations.AddField(
            model_name="pongmatch",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches",
                to="blitzed.beerpongtournament",
            ),
        ),
        migrations.CreateModel(
            name="DrinkingGame",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("image", models.URLField(blank=True, max_length=600, null=True)),
                ("image_alt", models.CharField(blank=True, max_length=200, null=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(max_length=500)),
                (
                    "questions",
                    models.ManyToManyField(
                        blank=True, related_name="drinking_games", to="blitzed.question"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
