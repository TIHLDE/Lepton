# Generated by Django 3.0.3 on 2020-02-29 04:40

import django.db.models.deletion
import django.utils.timezone
import enumchoicefield.fields
from django.conf import settings
from django.db import migrations, models

import app.common.enums
import app.content.models.user


class Migration(migrations.Migration):

    replaces = [
        ("content", "0001_initial"),
        ("content", "0002_start_end_time_registration"),
        ("content", "0003_end_date_deadline"),
        ("content", "0004_user_app_token"),
        ("content", "0005_user_vipps_transaction_id"),
        ("content", "0006_user_is_tihlde_member"),
        ("content", "0005_notification"),
        ("content", "0006_auto_20200210_1645"),
        ("content", "0007_merge_20200224_1700"),
        ("content", "0008_auto_20200226_1115"),
        ("content", "0009_auto_20200302_1755"),
    ]

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("image", models.URLField(blank=True, max_length=600, null=True)),
                ("image_alt", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "user_id",
                    models.CharField(max_length=15, primary_key=True, serialize=False),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254)),
                ("cell", models.CharField(blank=True, max_length=8)),
                ("em_nr", models.CharField(blank=True, max_length=12)),
                ("home_busstop", models.IntegerField(blank=True, null=True)),
                (
                    "gender",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "Mann"), (2, "Kvinne"), (3, "Annet")],
                        default=2,
                        null=True,
                    ),
                ),
                (
                    "user_class",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1. Klasse"),
                            (2, "2. Klasse"),
                            (3, "3. Klasse"),
                            (4, "4. Klasse"),
                            (5, "5. Klasse"),
                        ],
                        default=1,
                        null=True,
                    ),
                ),
                (
                    "user_study",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Dataing"),
                            (2, "DigFor"),
                            (3, "DigInc"),
                            (4, "DigSam"),
                            (5, "Drift"),
                        ],
                        default=1,
                        null=True,
                    ),
                ),
                ("allergy", models.CharField(blank=True, max_length=250)),
                ("tool", models.CharField(blank=True, max_length=100)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
                ("app_token", models.CharField(blank=True, max_length=60, null=True)),
                (
                    "vipps_transaction_id",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("is_TIHLDE_member", models.BooleanField(default=False)),
            ],
            options={"abstract": False,},
            managers=[("objects", app.content.models.user.UserManager()),],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text", models.CharField(max_length=200, null=True)),
            ],
            options={"verbose_name_plural": "Categories",},
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("image", models.URLField(blank=True, max_length=600, null=True)),
                ("image_alt", models.CharField(blank=True, max_length=200, null=True)),
                ("title", models.CharField(max_length=200)),
                ("start", models.DateTimeField()),
                ("location", models.CharField(max_length=200, null=True)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(0, "Low"), (1, "Normal"), (2, "High")],
                        default=0,
                        null=True,
                    ),
                ),
                ("sign_up", models.BooleanField(default=False)),
                ("limit", models.IntegerField(default=0)),
                ("closed", models.BooleanField(default=False)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="content.Category",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="JobPost",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("image", models.URLField(blank=True, max_length=600, null=True)),
                ("image_alt", models.CharField(blank=True, max_length=200, null=True)),
                ("title", models.CharField(max_length=200)),
                ("ingress", models.CharField(max_length=800)),
                ("body", models.TextField(blank=True, default="")),
                ("location", models.CharField(max_length=200)),
                ("deadline", models.DateTimeField(blank=True, null=True)),
                ("company", models.CharField(max_length=200)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("link", models.URLField(blank=True, max_length=300, null=True)),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("image", models.URLField(blank=True, max_length=600, null=True)),
                ("image_alt", models.CharField(blank=True, max_length=200, null=True)),
                ("title", models.CharField(max_length=200)),
                ("header", models.CharField(max_length=200)),
                ("body", models.TextField()),
            ],
            options={"verbose_name_plural": "News",},
        ),
        migrations.CreateModel(
            name="Warning",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text", models.CharField(max_length=400, null=True)),
                (
                    "type",
                    models.IntegerField(
                        choices=[(0, "Error"), (1, "Warning"), (2, "Message")],
                        default=0,
                        null=True,
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="UserEvent",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Signed up on"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("user_event_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "is_on_wait",
                    models.BooleanField(default=False, verbose_name="waiting list"),
                ),
                ("has_attended", models.BooleanField(default=False)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="content.Event"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("event", "is_on_wait", "created_at"),
                "verbose_name": "User event",
                "verbose_name_plural": "User events",
                "unique_together": {("user", "event")},
            },
        ),
        migrations.AddField(
            model_name="event",
            name="registered_users_list",
            field=models.ManyToManyField(
                blank=True,
                default=None,
                through="content.UserEvent",
                to=settings.AUTH_USER_MODEL,
                verbose_name="registered users",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="end_registration_at",
            field=models.DateTimeField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="start_registration_at",
            field=models.DateTimeField(blank=True, default=None, null=True),
        ),
        migrations.RenameField(
            model_name="event", old_name="start", new_name="start_date",
        ),
        migrations.AddField(
            model_name="event",
            name="end_date",
            field=models.DateTimeField(default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="event",
            name="sign_off_deadline",
            field=models.DateTimeField(blank=True, default=None, null=True),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(max_length=150)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("read", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Priority",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("priority_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "user_class",
                    enumchoicefield.fields.EnumChoiceField(
                        default=app.common.enums.UserClass(1),
                        enum_class=app.common.enums.UserClass,
                        max_length=6,
                    ),
                ),
                (
                    "user_study",
                    enumchoicefield.fields.EnumChoiceField(
                        default=app.common.enums.UserStudy(1),
                        enum_class=app.common.enums.UserStudy,
                        max_length=7,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Priorities",
                "ordering": ("user_class", "user_study"),
            },
        ),
        migrations.AddField(
            model_name="event",
            name="registration_priorities",
            field=models.ManyToManyField(
                blank=True,
                default=None,
                related_name="priorities",
                to="content.Priority",
            ),
        ),
    ]
