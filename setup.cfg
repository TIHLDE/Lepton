[tool.black]
line-length = 80

[isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=80
known_django=django,rest_framework,django_filters
sections=FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
forced_separate = [
    "django.contrib",
    "django.util"
    ]

skip = [
    __init__.py,
    migrations
    ]

[tool:pytest]
DJANGO_SETTINGS_MODULE = app.settings
python_files = test_*.py
addopts = --maxfail=3 --no-cov-on-fail --failed-first
faulthandler_timeout=300

[coverage:run]
# whether to measure branch coverage in addition to statement coverage. The result only included in HTML and JSON reports
branch = true

source = app

# files to omit from coverage
omit =
    */__init__.py,
    */apps.py,
    */factories/*,
    */migrations/*,
    app/settings.py,
    */tests/*,
    */urls.py,
    *wsgi.py,
    manage.py,


[flake8]
ignore =
    # Ignore the flake8-warnings that are incompatible with Black-formatting
    E203, E231, W503E203, E266, E501, W503
max-line-length = 80
max-complexity = 10
inline-quotes = "double"
per-file-ignores =
    # Suppress unused imports in init-files
    */__init__.py:F401

    # Suppress flake8-bandit flagging of 'assert' in tests
    */tests/*:S101

    # Suppress false positive
    ./manage.py:F401
select = ABS, B, B9, BLK, C, E, F, S, SC, T, W
exclude =
    # No need to traverse our git directory
    .git,

    # There's no value in checking cache directories
    __pycache__,

    # Migrations are autogenerated and not relevant to check
    */migrations

    # Settings are temporarily excluded.
    settings.py